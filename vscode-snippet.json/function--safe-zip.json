{
  "function-safe-zip": {
    "prefix": "function: safe zip",
    "body": [
      "/** Safely Zip Up Iterable Objects",
      " *",
      " * Attempts were made to combat some potential pitfalls when dealing with iterables.",
      " *",
      " * @param ...iterables: objects that implement the Symbol.iterator function",
      " * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols",
      " */",
      " function* safeZip(...iterables) {",
      "    function process(iterators, fakerable) {",
      "        const values = [];",
      "        for (let index = 0; index < iterators.length; ++index) {",
      "            const next = iterators[index]?.next?.();",
      "            if (next && next?.done === true) {",
      "                iterators.splice(index, 1, fakerable);",
      "                ++fakerable.count;",
      "            }",
      "            values.push(next?.value);",
      "        }",
      "        return values;",
      "    }",
      "    const fakerable = { count: 0, next: () => ({}) };",
      "    const iterators = iterables.map((iterable) =>",
      "        iterable?.[Symbol.iterator]?.() ?? (++fakerable.count, fakerable));",
      "    let values = process(iterators, fakerable);",
      "    while (fakerable.count < iterators.length) {",
      "        yield values;",
      "        values = process(iterators, fakerable);",
      "    }",
      "}"
    ],
    "description": "function* safeZip(...iterables) {"
  }
}
